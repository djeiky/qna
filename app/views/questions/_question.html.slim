.question
  .question-data
    h1 = @question.title
    p
      = @question.body
      - if current_user&.author_of?(@question)
        ||
        = link_to "Edit", "#", class: "edit-question-link"
        ||
        = link_to "Delete", question_path(@question), method: :delete, data: {confirm: "Are you shure?"}
    p Award
    p
      - if @question.award.present?
        p
          = @question.award.title
        p
          = image_tag url_for(@question.award.image)
    p.rating = "Rating: #{@question.rating}"
    = render "shared/vote_links", resource: @question

    .question-links
      p Links:
      ul
        - @question.links.each do |link|
          li class="link-#{link.id}"
            - if link.gist?
              .gist data-src="#{link.url}.json"
            - else
              = link_to link.name, link.url
            - if current_user&.author_of?(@question)
              ||
              = link_to "Delete", link_path(link), method: :delete, remote: true
      - if @question.files.attached?
        .question-files
          = render "shared/attachments", resource: @question.files
  .comments
    = render @question.comments
    = render partial: "comments/form", locals: {commentable: @question}

  = form_with model: question, class: "hidden", html: {id: "edit-question-form"} do |f|
    = f.label :title
    = f.text_field :title
    = f.label :body
    = f.text_area :body
    = f.label :files
    p Links:
    .edit-question-links
      = f.fields_for :links do |link|
        .link
          = render "shared/link_fields", f: link
      = link_to_add_association 'Add link', f, :links, partial: 'shared/link_fields'
    = f.file_field :files, multiple: true, direct_upload: true
    = f.submit

